{"version":3,"mappings":"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","names":["useStore","create","set","token","localStorage","getItem","user","JSON","parse","setToken","setItem","removeItem","setUser","stringify","logout","messages","setMessages","addMessage","message","state","updateMessage","updatedMessage","map","msg","_id","deleteMessage","messageId","filter","activeTab","setActiveTab","tab","loading","setLoading","error","setError","handleResponse","async","response","ok","errorData","json","e","statusText","Error","status","data","apiService","url","fetch","headers","Authorization","method","body","cn","inputs","twMerge","clsx","buttonVariants","cva","variants","variant","default","destructive","outline","secondary","ghost","link","size","sm","lg","icon","defaultVariants","Button","className","asChild","props","Comp","Slot","jsxRuntimeExports","jsx","AlertDialog","AlertDialogPrimitive.Root","AlertDialogTrigger","AlertDialogPrimitive.Trigger","AlertDialogPortal","AlertDialogPrimitive.Portal","AlertDialogOverlay","AlertDialogPrimitive.Overlay","AlertDialogContent","children","AlertDialogPrimitive.Content","AlertDialogHeader","AlertDialogFooter","AlertDialogTitle","AlertDialogPrimitive.Title","AlertDialogDescription","AlertDialogPrimitive.Description","AlertDialogAction","AlertDialogPrimitive.Action","AlertDialogCancel","AlertDialogPrimitive.Cancel","CustomAlertDialog","triggerText","title","description","onConfirm","onClick","PrivateMessageInbox","useEffect","err","errorMessage","_a","toast","fetchMessages","useMessages","selectedMessage","setSelectedMessage","React","useState","formatDate","dateString","Date","toLocaleDateString","year","month","day","hour","minute","jsxs","length","read","prevMessages","handleMessageClick","sender","username","_b","email","_c","receiver","_d","sentAt","subject","content","success","handleDeleteMessage","Command","CommandPrimitive","CommandInput","SearchIcon","Input","CommandList","List","CommandEmpty","Empty","CommandGroup","Group","CommandItem","Item","Popover","PopoverPrimitive.Root","PopoverTrigger","PopoverPrimitive.Trigger","PopoverContent","align","sideOffset","PopoverPrimitive.Portal","PopoverPrimitive.Content","sanitizeText","input","DOMPurify","sanitize","ALLOWED_TAGS","KEEP_CONTENT","trim","replace","UserSearchInput","onUserSelect","selectedUser","open","setOpen","query","setQuery","users","setUsers","debounceTimeoutRef","useRef","sanitizedQuery","current","clearTimeout","setTimeout","searchUsers","searchQuery","sanitizedSearchQuery","encodeURIComponent","onOpenChange","role","ChevronsUpDown","placeholder","value","onValueChange","onSelect","Check","messageSchema","z","object","string","min","max","transform","val","sanitizeSubject","USE_PROFILES","html","svg","mathMl","refine","sanitizeMessageContent","ComposeMessage","onMessageSent","onCancel","replyTo","sendMessage","sending","setSending","messageData","newMessage","useSendMessage","setSelectedUser","register","handleSubmit","formState","errors","isValid","reset","watch","useForm","resolver","zodResolver","defaultValues","mode","watchedSubject","watchedContent","onSubmit","receiverId","parentMessageId","htmlFor","type","id","rows","disabled","App","Router","NavLink","to","isActive","Routes","Route","path","element","Toaster","position","richColors","onPerfEntry","createRoot","document","getElementById","render","StrictMode","console","log","Function","__vitePreload","getCLS","getFID","getFCP","getLCP","getTTFB","import","then"],"ignoreList":[],"sources":["../../src/context/store.js","../../src/services/apiService.js","../../src/lib/utils.js","../../src/components/ui/button.jsx","../../src/components/ui/alert-dialog.jsx","../../src/components/AlertDialog.jsx","../../src/components/PrivateMessageInbox.jsx","../../src/hooks/useMessages.js","../../src/components/ui/command.jsx","../../src/components/ui/popover.jsx","../../src/lib/sanitize.js","../../src/components/UserSearchInput.jsx","../../src/components/ComposeMessage.jsx","../../src/hooks/useSendMessage.js","../../src/App.jsx","../../src/reportWebVitals.js","../../src/main.jsx"],"sourcesContent":["import { create } from 'zustand';\n\nconst useStore = create((set) => ({\n  // Auth state\n  token: localStorage.getItem('token') || null,\n  user: JSON.parse(localStorage.getItem('user')) || null,\n  setToken: (token) => {\n    set({ token });\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  },\n  setUser: (user) => {\n    set({ user });\n    if (user) {\n      localStorage.setItem('user', JSON.stringify(user));\n    } else {\n      localStorage.removeItem('user');\n    }\n  },\n  logout: () => {\n    set({ token: null, user: null });\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n\n  // Message state (for private messages)\n  messages: [],\n  setMessages: (messages) => set({ messages }),\n  addMessage: (message) => set((state) => ({ messages: [message, ...state.messages] })),\n  updateMessage: (updatedMessage) =>\n    set((state) => ({\n      messages: state.messages.map((msg) =>\n        msg._id === updatedMessage._id ? updatedMessage : msg\n      ),\n    })),\n  deleteMessage: (messageId) =>\n    set((state) => ({\n      messages: state.messages.filter((msg) => msg._id !== messageId),\n    })),\n\n  // UI state (e.g., active tab in inbox)\n  activeTab: 'inbox',\n  setActiveTab: (tab) => set({ activeTab: tab }),\n\n  // Loading and error states (general purpose, can be refined later)\n  loading: false,\n  setLoading: (loading) => set({ loading }),\n  error: null,\n  setError: (error) => set({ error }),\n}));\n\nexport default useStore;\n\n\n","const API_BASE_URL = import.meta.env.VITE_API_URL;\n\nconst handleResponse = async (response) => {\n  if (!response.ok) {\n    let errorData = {};\n    try {\n      errorData = await response.json();\n    } catch (e) {\n      // If response is not JSON, use status text\n      errorData = { message: response.statusText };\n    }\n    const error = new Error(errorData.message || `HTTP error! status: ${response.status}`);\n    error.status = response.status;\n    error.data = errorData;\n    throw error;\n  }\n  return response.json();\n};\n\nconst apiService = {\n  get: async (url, token) => {\n    const response = await fetch(`${API_BASE_URL}${url}`, {\n      headers: {\n        'Authorization': token ? `Bearer ${token}` : '',\n      },\n    });\n    return handleResponse(response);\n  },\n\n  post: async (url, data, token) => {\n    const response = await fetch(`${API_BASE_URL}${url}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token ? `Bearer ${token}` : '',\n      },\n      body: JSON.stringify(data),\n    });\n    return handleResponse(response);\n  },\n\n  put: async (url, data, token) => {\n    const response = await fetch(`${API_BASE_URL}${url}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token ? `Bearer ${token}` : '',\n      },\n      body: JSON.stringify(data),\n    });\n    return handleResponse(response);\n  },\n\n  delete: async (url, token) => {\n    const response = await fetch(`${API_BASE_URL}${url}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': token ? `Bearer ${token}` : '',\n      },\n    });\n    return handleResponse(response);\n  },\n};\n\nexport default apiService;\n\n\n","import { clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n\n\nimport DOMPurify from 'dompurify';\n\nexport function sanitizeSubject(input) {\n  return DOMPurify.sanitize(input, { USE_PROFILES: { html: false, svg: false, mathMl: false } });\n}\n\nexport function sanitizeMessageContent(input) {\n  return DOMPurify.sanitize(input, { USE_PROFILES: { html: false, svg: false, mathMl: false } });\n}\n\n\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props} />\n  );\n}\n\nexport { Button, buttonVariants }\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nfunction AlertDialog({\n  ...props\n}) {\n  return <AlertDialogPrimitive.Root data-slot=\"alert-dialog\" {...props} />;\n}\n\nfunction AlertDialogTrigger({\n  ...props\n}) {\n  return (<AlertDialogPrimitive.Trigger data-slot=\"alert-dialog-trigger\" {...props} />);\n}\n\nfunction AlertDialogPortal({\n  ...props\n}) {\n  return (<AlertDialogPrimitive.Portal data-slot=\"alert-dialog-portal\" {...props} />);\n}\n\nfunction AlertDialogOverlay({\n  className,\n  ...props\n}) {\n  return (\n    <AlertDialogPrimitive.Overlay\n      data-slot=\"alert-dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props} />\n  );\n}\n\nfunction AlertDialogContent({\n  className,\n  ...props\n}) {\n  return (\n    <AlertDialogPortal>\n      <AlertDialogOverlay />\n      <AlertDialogPrimitive.Content\n        data-slot=\"alert-dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props} />\n    </AlertDialogPortal>\n  );\n}\n\nfunction AlertDialogHeader({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"alert-dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props} />\n  );\n}\n\nfunction AlertDialogFooter({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"alert-dialog-footer\"\n      className={cn(\"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\", className)}\n      {...props} />\n  );\n}\n\nfunction AlertDialogTitle({\n  className,\n  ...props\n}) {\n  return (\n    <AlertDialogPrimitive.Title\n      data-slot=\"alert-dialog-title\"\n      className={cn(\"text-lg font-semibold\", className)}\n      {...props} />\n  );\n}\n\nfunction AlertDialogDescription({\n  className,\n  ...props\n}) {\n  return (\n    <AlertDialogPrimitive.Description\n      data-slot=\"alert-dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props} />\n  );\n}\n\nfunction AlertDialogAction({\n  className,\n  ...props\n}) {\n  return (<AlertDialogPrimitive.Action className={cn(buttonVariants(), className)} {...props} />);\n}\n\nfunction AlertDialogCancel({\n  className,\n  ...props\n}) {\n  return (\n    <AlertDialogPrimitive.Cancel\n      className={cn(buttonVariants({ variant: \"outline\" }), className)}\n      {...props} />\n  );\n}\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","import React from 'react';\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogTrigger } from './ui/alert-dialog';\nimport { Button } from './ui/button';\n\nconst CustomAlertDialog = ({ triggerText, title, description, onConfirm, children }) => {\n  return (\n    <AlertDialog>\n      <AlertDialogTrigger asChild>\n        {children || <Button variant=\"outline\">{triggerText}</Button>}\n      </AlertDialogTrigger>\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <AlertDialogTitle>{title}</AlertDialogTitle>\n          <AlertDialogDescription>\n            {description}\n          </AlertDialogDescription>\n        </AlertDialogHeader>\n        <AlertDialogFooter>\n          <AlertDialogCancel>Cancel</AlertDialogCancel>\n          <AlertDialogAction onClick={onConfirm}>Continue</AlertDialogAction>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialog>\n  );\n};\n\nexport default CustomAlertDialog;\n\n\n","import React, { useEffect } from 'react';\nimport { toast } from 'sonner';\nimport useStore from '../context/store';\nimport apiService from '../services/apiService';\nimport useMessages from '../hooks/useMessages';\nimport CustomAlertDialog from './AlertDialog';\nimport './PrivateMessageInbox.css';\n\nconst PrivateMessageInbox = () => {\n  const {\n    setMessages,\n    deleteMessage,\n    activeTab,\n    setActiveTab,\n    token,\n    loading,\n    setLoading,\n    error,\n    setError,\n  } = useStore();\n\n  const { messages } = useMessages();\n\n  const [selectedMessage, setSelectedMessage] = React.useState(null);\n\n  const handleMessageClick = async (messageId) => {\n    setError(null);\n    try {\n      const message = await apiService.get(`/messages/${messageId}`, token);\n      setSelectedMessage(message);\n      \n      if (activeTab === 'inbox' && !message.read) {\n        await apiService.put(`/messages/${messageId}/read`, { read: true }, token);\n        setMessages(prevMessages => \n          prevMessages.map(msg => \n            msg._id === messageId ? { ...msg, read: true } : msg\n          )\n        );\n      }\n    } catch (err) {\n      const errorMessage = err.data?.message || err.message || 'Failed to fetch message details';\n      setError(errorMessage);\n      toast.error(errorMessage);\n      console.error(err);\n    }\n  };\n\n  const handleDeleteMessage = async (messageId) => {\n    setError(null);\n    try {\n      await apiService.delete(`/messages/${messageId}`, token);\n      deleteMessage(messageId);\n      setSelectedMessage(null);\n      toast.success('Message deleted successfully!');\n    } catch (err) {\n      const errorMessage = err.data?.message || err.message || 'Failed to delete message';\n      setError(errorMessage);\n      toast.error(errorMessage);\n      console.error(err);\n    }\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading messages...</div>;\n  }\n\n  return (\n    <div className=\"private-message-inbox\">\n      <div className=\"inbox-header\">\n        <h2>Private Messages</h2>\n        <div className=\"tab-buttons\">\n          <button \n            className={activeTab === 'inbox' ? 'active' : ''}\n            onClick={() => setActiveTab('inbox')}\n          >\n            Inbox\n          </button>\n          <button \n            className={activeTab === 'sent' ? 'active' : ''}\n            onClick={() => setActiveTab('sent')}\n          >\n            Sent\n          </button>\n        </div>\n      </div>\n\n      {error && <div className=\"error-message\">{error}</div>}\n\n      <div className=\"inbox-content\">\n        <div className=\"message-list\">\n          {messages.length === 0 ? (\n            <div className=\"no-messages\">No messages found</div>\n          ) : (\n            messages.map((message) => (\n              <div \n                key={message._id} \n                className={`message-item ${!message.read && activeTab === 'inbox' ? 'unread' : ''}`}\n                onClick={() => handleMessageClick(message._id)}\n              >\n                <div className=\"message-header\">\n                  <span className=\"sender\">\n                    {activeTab === 'inbox' \n                      ? `${message.sender?.username || 'Unknown'} (${message.sender?.email || 'No Email'})`\n                      : `${message.receiver?.username || 'Unknown'} (${message.receiver?.email || 'No Email'})`\n                    }\n                  </span>\n                  <span className=\"date\">{formatDate(message.sentAt)}</span>\n                </div>\n                <div className=\"message-subject\">{message.subject}</div>\n                <div className=\"message-preview message-preview-ellipsis\">\n                  {message.content}\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n\n        {selectedMessage && (\n          <div className=\"message-detail\">\n            <div className=\"message-detail-header\">\n              <h3>{selectedMessage.subject}</h3>\n              <button \n                className=\"close-button\"\n                onClick={() => setSelectedMessage(null)}\n              >\n                ×\n              </button>\n            </div>\n            <div className=\"message-meta\">\n              <p><strong>From:</strong> {selectedMessage.sender?.username} ({selectedMessage.sender?.email})</p>\n              <p><strong>To:</strong> {selectedMessage.receiver?.username} ({selectedMessage.receiver?.email})</p>\n              <p><strong>Date:</strong> {formatDate(selectedMessage.sentAt)}</p>\n            </div>\n            <div className=\"message-content\">\n              {/* For rich text, consider a library like react-markdown or dangerouslySetInnerHTML with DOMPurify */}\n              {selectedMessage.content}\n            </div>\n            <div className=\"message-actions\">\n              <CustomAlertDialog\n                triggerText=\"Delete\"\n                title=\"Confirm Deletion\"\n                description=\"Are you sure you want to delete this message? This action cannot be undone.\"\n                onConfirm={() => handleDeleteMessage(selectedMessage._id)}\n              >\n                <button className=\"delete-button\">Delete</button>\n              </CustomAlertDialog>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PrivateMessageInbox;\n\n","import { useEffect } from 'react';\nimport { toast } from 'sonner';\nimport useStore from '../context/store';\nimport apiService from '../services/apiService';\n\nconst useMessages = () => {\n  const { messages, setMessages, activeTab, token, setLoading, setError } = useStore();\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await apiService.get(`/messages?type=${activeTab}`, token);\n        setMessages(data);\n      } catch (err) {\n        const errorMessage = err.data?.message || err.message || 'Failed to fetch messages';\n        setError(errorMessage);\n        toast.error(errorMessage);\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMessages();\n  }, [activeTab, token, setMessages, setLoading, setError]);\n\n  return { messages };\n};\n\nexport default useMessages;\n\n\n","\"use client\"\n\nimport * as React from \"react\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { SearchIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\"\n\nfunction Command({\n  className,\n  ...props\n}) {\n  return (\n    <CommandPrimitive\n      data-slot=\"command\"\n      className={cn(\n        \"bg-popover text-popover-foreground flex h-full w-full flex-col overflow-hidden rounded-md\",\n        className\n      )}\n      {...props} />\n  );\n}\n\nfunction CommandDialog({\n  title = \"Command Palette\",\n  description = \"Search for a command to run...\",\n  children,\n  ...props\n}) {\n  return (\n    <Dialog {...props}>\n      <DialogHeader className=\"sr-only\">\n        <DialogTitle>{title}</DialogTitle>\n        <DialogDescription>{description}</DialogDescription>\n      </DialogHeader>\n      <DialogContent className=\"overflow-hidden p-0\">\n        <Command\n          className=\"[&_[cmdk-group-heading]]:text-muted-foreground **:data-[slot=command-input-wrapper]:h-12 [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group]]:px-2 [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nfunction CommandInput({\n  className,\n  ...props\n}) {\n  return (\n    <div\n      data-slot=\"command-input-wrapper\"\n      className=\"flex h-9 items-center gap-2 border-b px-3\">\n      <SearchIcon className=\"size-4 shrink-0 opacity-50\" />\n      <CommandPrimitive.Input\n        data-slot=\"command-input\"\n        className={cn(\n          \"placeholder:text-muted-foreground flex h-10 w-full rounded-md bg-transparent py-3 text-sm outline-hidden disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        {...props} />\n    </div>\n  );\n}\n\nfunction CommandList({\n  className,\n  ...props\n}) {\n  return (\n    <CommandPrimitive.List\n      data-slot=\"command-list\"\n      className={cn(\"max-h-[300px] scroll-py-1 overflow-x-hidden overflow-y-auto\", className)}\n      {...props} />\n  );\n}\n\nfunction CommandEmpty({\n  ...props\n}) {\n  return (<CommandPrimitive.Empty data-slot=\"command-empty\" className=\"py-6 text-center text-sm\" {...props} />);\n}\n\nfunction CommandGroup({\n  className,\n  ...props\n}) {\n  return (\n    <CommandPrimitive.Group\n      data-slot=\"command-group\"\n      className={cn(\n        \"text-foreground [&_[cmdk-group-heading]]:text-muted-foreground overflow-hidden p-1 [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium\",\n        className\n      )}\n      {...props} />\n  );\n}\n\nfunction CommandSeparator({\n  className,\n  ...props\n}) {\n  return (\n    <CommandPrimitive.Separator\n      data-slot=\"command-separator\"\n      className={cn(\"bg-border -mx-1 h-px\", className)}\n      {...props} />\n  );\n}\n\nfunction CommandItem({\n  className,\n  ...props\n}) {\n  return (\n    <CommandPrimitive.Item\n      data-slot=\"command-item\"\n      className={cn(\n        \"data-[selected=true]:bg-accent data-[selected=true]:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled=true]:pointer-events-none data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props} />\n  );\n}\n\nfunction CommandShortcut({\n  className,\n  ...props\n}) {\n  return (\n    <span\n      data-slot=\"command-shortcut\"\n      className={cn(\"text-muted-foreground ml-auto text-xs tracking-widest\", className)}\n      {...props} />\n  );\n}\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Popover({\n  ...props\n}) {\n  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />;\n}\n\nfunction PopoverTrigger({\n  ...props\n}) {\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />;\n}\n\nfunction PopoverContent({\n  className,\n  align = \"center\",\n  sideOffset = 4,\n  ...props\n}) {\n  return (\n    <PopoverPrimitive.Portal>\n      <PopoverPrimitive.Content\n        data-slot=\"popover-content\"\n        align={align}\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 origin-(--radix-popover-content-transform-origin) rounded-md border p-4 shadow-md outline-hidden\",\n          className\n        )}\n        {...props} />\n    </PopoverPrimitive.Portal>\n  );\n}\n\nfunction PopoverAnchor({\n  ...props\n}) {\n  return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />;\n}\n\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\n","import DOMPurify from 'dompurify';\n\n/**\n * Sanitize HTML content to prevent XSS attacks\n * @param {string} dirty - The potentially unsafe HTML string\n * @returns {string} - The sanitized HTML string\n */\nexport const sanitizeHtml = (dirty) => {\n  if (typeof dirty !== 'string') {\n    return '';\n  }\n  \n  return DOMPurify.sanitize(dirty, {\n    ALLOWED_TAGS: ['b', 'i', 'em', 'strong', 'u', 'br', 'p'],\n    ALLOWED_ATTR: [],\n    KEEP_CONTENT: true,\n  });\n};\n\n/**\n * Sanitize plain text input by removing HTML tags and trimming whitespace\n * @param {string} input - The input string to sanitize\n * @returns {string} - The sanitized string\n */\nexport const sanitizeText = (input) => {\n  if (typeof input !== 'string') {\n    return '';\n  }\n  \n  // Remove HTML tags and decode HTML entities\n  const withoutHtml = DOMPurify.sanitize(input, { ALLOWED_TAGS: [], KEEP_CONTENT: true });\n  \n  // Trim whitespace and normalize line breaks\n  return withoutHtml.trim().replace(/\\s+/g, ' ');\n};\n\n/**\n * Sanitize subject line with additional length and character restrictions\n * @param {string} subject - The subject string to sanitize\n * @returns {string} - The sanitized subject string\n */\nexport const sanitizeSubject = (subject) => {\n  if (typeof subject !== 'string') {\n    return '';\n  }\n  \n  // Remove HTML tags and decode entities\n  let sanitized = DOMPurify.sanitize(subject, { ALLOWED_TAGS: [], KEEP_CONTENT: true });\n  \n  // Remove control characters and normalize whitespace\n  sanitized = sanitized.replace(/[\\x00-\\x1F\\x7F]/g, '').trim().replace(/\\s+/g, ' ');\n  \n  // Limit length\n  return sanitized.substring(0, 200);\n};\n\n/**\n * Sanitize message content while preserving basic formatting\n * @param {string} content - The message content to sanitize\n * @returns {string} - The sanitized content\n */\nexport const sanitizeMessageContent = (content) => {\n  if (typeof content !== 'string') {\n    return '';\n  }\n  \n  // Allow basic formatting tags but sanitize everything else\n  let sanitized = DOMPurify.sanitize(content, {\n    ALLOWED_TAGS: ['br', 'p'],\n    ALLOWED_ATTR: [],\n    KEEP_CONTENT: true,\n  });\n  \n  // Remove control characters except newlines and tabs\n  sanitized = sanitized.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]/g, '');\n  \n  // Normalize excessive whitespace but preserve line breaks\n  sanitized = sanitized.replace(/[ \\t]+/g, ' ').replace(/\\n\\s*\\n\\s*\\n/g, '\\n\\n');\n  \n  // Trim and limit length\n  return sanitized.trim().substring(0, 5000);\n};\n\n/**\n * Validate and sanitize email addresses\n * @param {string} email - The email to validate and sanitize\n * @returns {string} - The sanitized email or empty string if invalid\n */\nexport const sanitizeEmail = (email) => {\n  if (typeof email !== 'string') {\n    return '';\n  }\n  \n  // Basic email regex for validation\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const sanitized = email.trim().toLowerCase();\n  \n  return emailRegex.test(sanitized) ? sanitized : '';\n};\n\n/**\n * Sanitize username input\n * @param {string} username - The username to sanitize\n * @returns {string} - The sanitized username\n */\nexport const sanitizeUsername = (username) => {\n  if (typeof username !== 'string') {\n    return '';\n  }\n  \n  // Remove HTML tags and special characters, keep only alphanumeric, underscore, and hyphen\n  let sanitized = DOMPurify.sanitize(username, { ALLOWED_TAGS: [], KEEP_CONTENT: true });\n  sanitized = sanitized.replace(/[^a-zA-Z0-9_-]/g, '').trim();\n  \n  return sanitized.substring(0, 50);\n};\n\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Command, CommandEmpty, CommandGroup, CommandInput, CommandItem, CommandList } from './ui/command';\nimport { Popover, PopoverContent, PopoverTrigger } from './ui/popover';\nimport { Button } from './ui/button';\nimport { Check, ChevronsUpDown } from 'lucide-react';\nimport { cn } from '../lib/utils';\nimport { sanitizeText } from '../lib/sanitize';\nimport apiService from '../services/apiService';\nimport useStore from '../context/store';\nimport { toast } from 'sonner';\n\nconst UserSearchInput = ({ onUserSelect, selectedUser }) => {\n  const [open, setOpen] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { token } = useStore();\n  const debounceTimeoutRef = useRef(null);\n\n  useEffect(() => {\n    const sanitizedQuery = sanitizeText(query);\n    if (sanitizedQuery.length > 2) {\n      if (debounceTimeoutRef.current) {\n        clearTimeout(debounceTimeoutRef.current);\n      }\n      debounceTimeoutRef.current = setTimeout(() => {\n        searchUsers(sanitizedQuery);\n      }, 500);\n    } else {\n      setUsers([]);\n    }\n  }, [query, token]);\n\n  const searchUsers = async (searchQuery) => {\n    setLoading(true);\n    try {\n      // Additional sanitization before sending to API\n      const sanitizedSearchQuery = encodeURIComponent(sanitizeText(searchQuery));\n      const response = await apiService.get(`/users/search?query=${sanitizedSearchQuery}`, token);\n      setUsers(response);\n    } catch (err) {\n      const errorMessage = err.data?.message || err.message || 'Failed to search users';\n      toast.error(errorMessage);\n      console.error(err);\n      setUsers([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Popover open={open} onOpenChange={setOpen}>\n      <PopoverTrigger asChild>\n        <Button\n          variant=\"outline\"\n          role=\"combobox\"\n          aria-expanded={open}\n          className=\"w-[200px] justify-between\"\n        >\n          {selectedUser\n            ? selectedUser.username\n            : \"Select user...\"}\n          <ChevronsUpDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[200px] p-0\">\n        <Command>\n          <CommandInput\n            placeholder=\"Search user...\"\n            value={query}\n            onValueChange={setQuery}\n          />\n          <CommandList>\n            {loading && <CommandEmpty>Searching...</CommandEmpty>}\n            {!loading && users.length === 0 && query.length > 2 && <CommandEmpty>No user found.</CommandEmpty>}\n            <CommandGroup>\n              {users.map((user) => (\n                <CommandItem\n                  key={user._id}\n                  value={user.username}\n                  onSelect={() => {\n                    onUserSelect(user);\n                    setOpen(false);\n                  }}\n                >\n                  <Check\n                    className={cn(\n                      \"mr-2 h-4 w-4\",\n                      selectedUser && selectedUser._id === user._id\n                        ? \"opacity-100\"\n                        : \"opacity-0\"\n                    )}\n                  />\n                  {user.username} ({user.email})\n                </CommandItem>\n              ))}\n            </CommandGroup>\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default UserSearchInput;\n\n\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { toast } from 'sonner';\nimport useStore from '../context/store';\nimport useSendMessage from '../hooks/useSendMessage';\nimport UserSearchInput from './UserSearchInput';\nimport { sanitizeSubject, sanitizeMessageContent } from '../lib/utils'; // Assuming utils.js has sanitization functions\nimport './ComposeMessage.css';\n\n// Zod validation schema with sanitization\nconst messageSchema = z.object({\n  subject: z\n    .string()\n    .min(1, 'Subject is required')\n    .max(200, 'Subject must be less than 200 characters')\n    .transform((val) => sanitizeSubject(val))\n    .refine(\n      (val) => val.trim().length > 0,\n      'Subject cannot be empty or contain only whitespace'\n    ),\n  content: z\n    .string()\n    .min(1, 'Message content is required')\n    .max(5000, 'Message must be less than 5000 characters')\n    .transform((val) => sanitizeMessageContent(val))\n    .refine(\n      (val) => val.trim().length > 0,\n      'Message cannot be empty or contain only whitespace'\n    ),\n});\n\nconst ComposeMessage = ({ onMessageSent, onCancel, replyTo = null }) => {\n  const { token } = useStore();\n  const { sendMessage, sending } = useSendMessage();\n  \n  const [selectedUser, setSelectedUser] = useState(\n    replyTo?.sender ? { _id: replyTo.sender._id, username: replyTo.sender.username, email: replyTo.sender.email } : null\n  );\n\n  // Initialize react-hook-form with Zod validation\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isValid },\n    reset,\n    watch,\n  } = useForm({\n    resolver: zodResolver(messageSchema),\n    defaultValues: {\n      subject: replyTo ? `Re: ${replyTo.subject}` : '',\n      content: '',\n    },\n    mode: 'onChange',\n  });\n\n  // Watch form values for character counting\n  const watchedSubject = watch('subject');\n  const watchedContent = watch('content');\n\n  // Form submission handler\n  const onSubmit = async (data) => {\n    if (!selectedUser) {\n      toast.error('Please select a recipient');\n      return;\n    }\n\n    try {\n      const messageData = {\n        receiverId: selectedUser._id,\n        subject: data.subject,\n        content: data.content,\n        parentMessageId: replyTo?._id || null,\n      };\n\n      await sendMessage(messageData);\n      \n      // Reset form\n      reset();\n      setSelectedUser(null);\n      \n      if (onMessageSent) {\n        onMessageSent();\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"compose-message\">\n      <div className=\"compose-header\">\n        <h3>{replyTo ? 'Reply to Message' : 'Compose New Message'}</h3>\n        {onCancel && (\n          <button className=\"close-button\" onClick={onCancel}>\n            ×\n          </button>\n        )}\n      </div>\n\n      <form onSubmit={handleSubmit(onSubmit)} className=\"compose-form\">\n        {!replyTo && (\n          <div className=\"form-group\">\n            <label htmlFor=\"receiverId\">To: *</label>\n            <UserSearchInput\n              onUserSelect={setSelectedUser}\n              selectedUser={selectedUser}\n            />\n            {selectedUser && (\n              <small className=\"help-text\">\n                Selected: {selectedUser.username} ({selectedUser.email})\n              </small>\n            )}\n            {errors.receiverId && (\n              <small className=\"error-message\">{errors.receiverId.message}</small>\n            )}\n          </div>\n        )}\n\n        <div className=\"form-group\">\n          <label htmlFor=\"subject\">Subject: *</label>\n          <input\n            type=\"text\"\n            id=\"subject\"\n            {...register('subject')}\n            placeholder=\"Enter message subject\"\n            className={errors.subject ? 'error' : ''}\n          />\n          <div className=\"field-info\">\n            <small className=\"char-count\">\n              {watchedSubject?.length || 0}/200 characters\n            </small>\n            {errors.subject && (\n              <small className=\"error-message\">{errors.subject.message}</small>\n            )}\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"content\">Message: *</label>\n          <textarea\n            id=\"content\"\n            {...register('content')}\n            placeholder=\"Enter your message\"\n            rows=\"8\"\n            className={errors.content ? 'error' : ''}\n          />\n          <div className=\"field-info\">\n            <small className=\"char-count\">\n              {watchedContent?.length || 0}/5000 characters\n            </small>\n            {errors.content && (\n              <small className=\"error-message\">{errors.content.message}</small>\n            )}\n          </div>\n        </div>\n\n        <div className=\"form-actions\">\n          <button \n            type=\"submit\" \n            className=\"send-button\"\n            disabled={sending || !isValid || (!replyTo && !selectedUser)}\n          >\n            {sending ? 'Sending...' : 'Send Message'}\n          </button>\n          {onCancel && (\n            <button \n              type=\"button\" \n              className=\"cancel-button\"\n              onClick={onCancel}\n            >\n              Cancel\n            </button>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ComposeMessage;\n\n\n","import { useState } from 'react';\nimport { toast } from 'sonner';\nimport useStore from '../context/store';\nimport apiService from '../services/apiService';\n\nconst useSendMessage = () => {\n  const { token, addMessage, setLoading } = useStore();\n  const [sending, setSending] = useState(false);\n\n  const sendMessage = async (messageData) => {\n    setSending(true);\n    setLoading(true);\n    \n    try {\n      const newMessage = await apiService.post('/messages', messageData, token);\n      addMessage(newMessage);\n      toast.success('Message sent successfully!');\n      return newMessage;\n    } catch (err) {\n      const errorMessage = err.data?.message || err.message || 'Failed to send message. Please try again.';\n      toast.error(errorMessage);\n      throw err;\n    } finally {\n      setSending(false);\n      setLoading(false);\n    }\n  };\n\n  return { sendMessage, sending };\n};\n\nexport default useSendMessage;\n\n","import { BrowserRouter as Router, Routes, Route, NavLink } from 'react-router-dom';\nimport { Toaster } from 'sonner';\nimport PrivateMessageInbox from './components/PrivateMessageInbox';\nimport ComposeMessage from './components/ComposeMessage';\nimport useStore from './context/store';\nimport './App.css';\n\nfunction App() {\n  const setActiveTab = useStore((state) => state.setActiveTab);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"app-header\">\n          <div className=\"container mx-auto px-4\">\n            <h1 className=\"text-2xl md:text-3xl font-bold text-center mb-4\">\n              Museum Collection Platform - Advanced Forum Features\n            </h1>\n            <nav className=\"main-nav\">\n              <div className=\"flex flex-col sm:flex-row justify-center gap-4 sm:gap-6\">\n                <NavLink \n                  to=\"/\" \n                  className={({ isActive }) => \n                    `px-4 py-2 rounded-md transition-all duration-300 border border-white/30 text-center ${\n                      isActive \n                        ? 'bg-white/20 border-white/50' \n                        : 'hover:bg-white/10'\n                    }`\n                  }\n                  onClick={() => setActiveTab('inbox')}\n                >\n                  Messages\n                </NavLink>\n                <NavLink \n                  to=\"/compose\" \n                  className={({ isActive }) => \n                    `px-4 py-2 rounded-md transition-all duration-300 border border-white/30 text-center ${\n                      isActive \n                        ? 'bg-white/20 border-white/50' \n                        : 'hover:bg-white/10'\n                    }`\n                  }\n                  onClick={() => setActiveTab('compose')}\n                >\n                  Compose\n                </NavLink>\n              </div>\n            </nav>\n          </div>\n        </header>\n\n        <main className=\"app-main flex-1 p-4 md:p-6\">\n          <div className=\"container mx-auto max-w-6xl\">\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<PrivateMessageInbox />} \n              />\n              <Route \n                path=\"/compose\" \n                element={\n                  <ComposeMessage \n                    onMessageSent={() => setActiveTab('inbox')}\n                    onCancel={() => setActiveTab('inbox')}\n                  />\n                } \n              />\n            </Routes>\n          </div>\n        </main>\n\n        <footer className=\"app-footer bg-gray-800 text-white text-center py-4\">\n          <div className=\"container mx-auto px-4\">\n            <p className=\"text-sm\">\n              Museum Collection Platform - Task 7.3: Advanced Forum Features Demo\n            </p>\n          </div>\n        </footer>\n      </div>\n      <Toaster position=\"bottom-right\" richColors />\n    </Router>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n\n\n","import React, { StrictMode } from 'react'\nimport ReactDOM, { createRoot } from 'react-dom/client'\nimport './index.css'\nimport App from './App.jsx'\nimport reportWebVitals from './reportWebVitals';\n\nif (import.meta.env.MODE !== 'production') {\n  import('react-axe').then(axe => {\n    axe.default(React, ReactDOM, 1000);\n  });\n}\n\ncreateRoot(document.getElementById('root')).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);"],"file":"assets/index-P7KS4Di7.js"}